import java.util.*;
public class CPU_Scheduling
{
    public static void SJF(){
        Scanner sc = new Scanner(System.in);
        System.out.println("enter no of processes for SJF CPU Scheduling: ");
        int n = sc.nextInt();
        int pid[] = new int[n];
        int at[] = new int[n];
        int bt[] = new int[n];
        int ct[] = new int[n];
        int tat[] = new int[n];
        int wt[] = new int[n];
        int f[] = new int[n];
        int k[] = new int[n];
        int temp, tot=0,st=0;
        float avgwt=0,avgtat=0;
        for(int i = 0; i < n; i++)
        {
            System.out.println("enter process " + (i+1) + " arrival time: ");
            at[i] = sc.nextInt();
            System.out.println("enter process " + (i+1) + " brust time: ");
            bt[i] = sc.nextInt();
            k[i] = bt[i];
            pid[i] = i+1;
        }

        while(true)
        {
            int min = 99 , c =n;
            if(tot == n)
                break;

            for(int i=0;i<n;i++){
                if(at[i]<=st && f[i] == 0 && bt[i]<min ){
                    min = bt[i];
                    c = i;
                }
            }

            if (c == n) st++;
            else{
                bt[c]--;
                st++;
                if(bt[c] == 0){
                    ct[c] =st;
                    f[c]=1;
                    tot++;
                }
            }
        }

        for(int i=0;i<n;i++){
            tat[i] = ct[i] - at[i];
            wt[i] = tat[i] - k[i];
            avgwt += wt[i];
            avgtat += tat[i];
        }

        System.out.println("pid arrival burst complete turn waiting");
        for(int i=0;i<n;i++)
        {
            System.out.println(pid[i] +"\t"+ at[i]+"\t"+ k[i] +"\t"+ ct[i]+"\t"+ tat[i] +"\t"+ wt[i]);
        }

        System.out.println("\naverage tat is "+ (float)(avgtat/n));
        System.out.println("average wt is "+ (float)(avgwt/n));
        sc.close();
    }


    public static void FCFS(){
        Scanner sc = new Scanner(System.in);
        System.out.println("enter no of processes for FCFS: ");
        int n = sc.nextInt();
        int pid[] = new int[n];
        int at[] = new int[n];
        int bt[] = new int[n];
        int ct[] = new int[n];
        int tat[] = new int[n];
        int wt[] = new int[n];
        int temp;
        float avgwt = 0, avgtat = 0;

        for (int i = 0; i < n; i++) {
            System.out.println("enter process " + (i + 1) + " arrival time: ");
            at[i] = sc.nextInt();
            System.out.println("enter process " + (i + 1) + " brust time: ");
            bt[i] = sc.nextInt();
            pid[i] = i + 1;
        }

        // sorting according to arrival times
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n - (i + 1); j++) {
                if (at[j] > at[j + 1]) {
                    temp = at[j];
                    at[j] = at[j + 1];
                    at[j + 1] = temp;
                    temp = bt[j];
                    bt[j] = bt[j + 1];
                    bt[j + 1] = temp;
                    temp = pid[j];
                    pid[j] = pid[j + 1];
                    pid[j + 1] = temp;
                }
            }
        }

        for (int i = 0; i < n; i++) {
            if (i == 0) {
                ct[i] = at[i] + bt[i];
            } else {
                if (at[i] > ct[i - 1]) {
                    ct[i] = at[i] + bt[i];
                } else
                    ct[i] = ct[i - 1] + bt[i];
            }
            tat[i] = ct[i] - at[i];
            wt[i] = tat[i] - bt[i];
            avgwt += wt[i];
            avgtat += tat[i];
        }
        System.out.println("\npid arrival brust complete turn waiting");
        for (int i = 0; i < n; i++) {
            System.out.println(pid[i] + " \t " + at[i] + "\t" + bt[i] + "\t" +
                    ct[i] + "\t" + tat[i] + "\t" + wt[i]);
        }
        sc.close();
        System.out.println("\naverage waiting time: " + (avgwt / n));
        System.out.println("average turnaround time:" + (avgtat / n));
    }
    

    public static void Priority(){
        Scanner s = new Scanner(System.in);
        int x, n, pid[], priority[], bt[], wt[], tat[], i;
        float avgwt, avgtat;
        pid = new int[10];
        priority = new int[10];
        bt = new int[10];
        wt = new int[10];
        tat = new int[10];
        System.out.print("Enter the number of process : ");
        n = s.nextInt();
        System.out.print("\n\t Enter burst time : time priorities \n");

        for (i = 0; i < n; i++) {
            System.out.print("\nProcess[" + (i + 1) + "]:");
            bt[i] = s.nextInt();
            priority[i] = s.nextInt();
            pid[i] = i + 1;
        }
        for (i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                if (priority[i] > priority[j]) {
                    x = priority[i];
                    priority[i] = priority[j];
                    priority[j] = x;
                    x = bt[i];
                    bt[i] = bt[j];
                    bt[j] = x;
                    x = pid[i];
                    pid[i] = pid[j];
                    pid[j] = x;
                }
            }
        }
        wt[0] = 0;
        avgwt = 0;
        tat[0] = bt[0];
        avgtat = tat[0];
        for (i = 1; i < n; i++) {
            wt[i] = tat[i - 1];
            avgwt += wt[i];
            tat[i] = wt[i] + bt[i];
            avgtat += tat[i];
        }
        System.out.print("\n\nProcess \t BT \t WT \t TAT \t Priority \n");
        for (i = 0; i < n; i++)
            System.out.print("\n " + pid[i] + "\t " + bt[i] + "\t " + wt[i] + "\t " + tat[i] + "\t " + priority[i] + "\n");
        avgwt /= n;
        avgtat /= n;
        System.out.print("\n Average Wait Time : " + avgwt);
        System.out.print("\n Average Turn Around Time : " + avgtat);
    }

    public static void RR(){
        int n,i,qt,count=0,temp,sq=0,bt[],wt[],tat[],rem_bt[];
        float avgwt=0,avgtat=0;
        bt = new int[10];
        wt = new int[10];
        tat = new int[10];
        rem_bt = new int[10];
        Scanner s=new Scanner(System.in);
        System.out.print("Enter the number of process (maximum 10) = ");
        n = s.nextInt();
        System.out.print("Enter the burst time of the process\n");
        for (i=0;i<n;i++)
        {
            System.out.print("P"+i+" = ");
            bt[i] = s.nextInt();
            rem_bt[i] = bt[i];
        }
        System.out.print("Enter the quantum time: ");
        qt = s.nextInt();
        while(true)
        {
            for (i=0,count=0;i<n;i++)
            {
                temp = qt;
                if(rem_bt[i] == 0)
                {
                    count++;
                    continue;
                }
                if(rem_bt[i]>qt)
                    rem_bt[i]= rem_bt[i] - qt;
                else if(rem_bt[i]>=0)
                {
                    temp = rem_bt[i];
                    rem_bt[i] = 0;
                }
                sq = sq + temp;
                tat[i] = sq;
            }
            if(n == count)
                break;
        }
        System.out.print("\n");
        System.out.print("\nProcess\t Burst Time\t Turnaround Time\t Waiting Time\n");
        System.out.print("\n");
        for(i=0;i<n;i++)
        {
            wt[i]=tat[i]-bt[i];
            avgwt=avgwt+wt[i];
            avgtat=avgtat+tat[i];
            System.out.print("\n "+(i+1)+"\t "+bt[i]+"\t\t "+tat[i]+"\t\t"+wt[i]+"\n");
        }
        avgwt=avgwt/n;
        avgtat=avgtat/n;
        System.out.println("\nAverage waiting Time = "+avgwt+"\n");
        System.out.println("Average turnaround time = "+avgtat);
        
    }

    public static void main(String[] args) {
	//call functions SJF FCFS RR Priority
    }   
}
